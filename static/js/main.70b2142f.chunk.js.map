{"version":3,"sources":["components/Terrain/Terrains/0.png","components/Terrain/Terrains/1.png","components/Terrain/Terrains/2.png","components/Terrain/Terrains/3.png","components/Terrain/Terrains/4.png","components/Terrain/Terrains/5.png","components/Terrain/Terrain.jsx","components/Board/Board.jsx","App.js","reportWebVitals.js","index.js"],"names":["Terrain","props","useState","image","setImage","useEffect","terrain","Wood","Wool","Wheat","Clay","Stone","Dessert","className","class","src","alt","number","Board","terrains","numbers","board","shuffle","i","pop","push","list","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","id","map","position","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAAe,G,YAAA,IAA0B,+BCA1B,MAA0B,8BCA1B,MAA0B,8BCA1B,MAA0B,8BCA1B,MAA0B,8BCA1B,MAA0B,8BCiD1BA,EAxCC,SAAAC,GAAU,IAAD,EACKC,qBADL,mBACdC,EADc,KACPC,EADO,KA6BrB,OA1BAC,qBAAU,WACN,OAAQJ,EAAMK,SACV,KAAK,EACDF,EAASG,GACT,MACJ,KAAK,EACDH,EAASI,GACT,MACJ,KAAK,EACDJ,EAASK,GACT,MACJ,KAAK,EACDL,EAASM,GACT,MACJ,KAAK,EACDN,EAASO,GACT,MACJ,KAAK,EACDP,EAASQ,GACT,MACJ,QACIR,EAASM,MAGlB,CAACT,EAAMK,UAGN,qBAAKO,UAAS,WAAMZ,EAAMa,OAA1B,SACI,sBAAKD,UAAW,UAAhB,UACI,qBAAKE,IAAKZ,EAAOa,IAAKf,EAAMK,UAC5B,8BAAML,EAAMgB,eC0BbC,EAhED,WAAM,IAAD,EACIhB,mBAAS,CACxB,EAAE,EAAE,EAAE,EACN,EAAE,EAAE,EAAE,EACN,EAAE,EAAE,EAAE,EACN,EAAE,EAAE,EACJ,EAAE,EAAE,EACJ,IANGiB,EADQ,sBAUGjB,mBAAS,CACvB,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,KADnCkB,EAVQ,sBAcKlB,oBAAS,WACzB,IAAImB,EAAQ,GACZC,EAAQH,GACRG,EAAQF,GACR,IAAI,IAAIG,EAAE,EAAGA,EAAE,GAAIA,IAAI,CACnB,IAAMjB,EAAUa,EAASK,MACzBH,EAAMI,KAAK,CAAC,QAAUnB,EAAS,SAAWiB,EAAG,OAAqB,IAAZjB,EAAgB,GAAGc,EAAQI,QAErF,OAAOH,KARJA,EAdQ,oBA0Bf,SAASC,EAAQI,GAIb,IAHA,IAAgCC,EAAgBC,EAA5CC,EAAeH,EAAKI,OAGjB,IAAMD,GAGTD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GAIzCF,EAAiBD,EAHjBG,GAAgB,GAIhBH,EAAKG,GAAgBH,EAAKE,GAC1BF,EAAKE,GAAeD,EAGxB,OAAOD,EAeX,OATArB,qBAAU,WAIN,OAAO,eAGT,IAGE,qBAAK6B,GAAI,QAAT,SACKb,EAAMc,KAAI,SAAA7B,GAAO,OAAI,cAAC,EAAD,CAASA,QAASA,EAAQA,QAASQ,MAAOR,EAAQ8B,SAAUnB,OAASX,EAAQW,QAAaX,EAAQ8B,gBCpDrHC,MARf,WACE,OACE,qBAAKxB,UAAU,MAAf,SACE,cAAC,EAAD,OCMSyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.70b2142f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/0.7d6dd0e6.png\";","export default __webpack_public_path__ + \"static/media/1.4941a2d9.png\";","export default __webpack_public_path__ + \"static/media/2.d610138d.png\";","export default __webpack_public_path__ + \"static/media/3.aa9b9d6c.png\";","export default __webpack_public_path__ + \"static/media/4.8a7fbb31.png\";","export default __webpack_public_path__ + \"static/media/5.8789a9ac.png\";","import React, {useState, useEffect} from 'react';\nimport './Terrain.css';\nimport Wood  from './Terrains/0.png'\nimport Wool  from './Terrains/1.png'\nimport Wheat from './Terrains/2.png'\nimport Clay  from './Terrains/3.png'\nimport Stone from './Terrains/4.png'\nimport Dessert from './Terrains/5.png'\n\nconst Terrain = props => {\n    const [image, setImage] = useState()\n\n    useEffect(()=>{\n        switch (props.terrain){\n            case 0:\n                setImage(Wood)\n                break\n            case 1:\n                setImage(Wool)\n                break\n            case 2:\n                setImage(Wheat)\n                break\n            case 3:\n                setImage(Clay)\n                break\n            case 4:\n                setImage(Stone)\n                break\n            case 5:\n                setImage(Dessert)\n                break\n            default:\n                setImage(Clay)\n                break\n        }\n    }, [props.terrain])\n\n    return(\n        <div className={`p${props.class}`}>\n            <div className={'terrain'}>\n                <img src={image} alt={props.terrain}/>\n                <div>{props.number}</div>\n            </div>\n\n        </div>\n    )\n}\n//\nexport default Terrain;","import React, {useState, useEffect} from 'react';\nimport './Board.css';\nimport Terrain from \"../Terrain/Terrain\";\n\nconst Board = () =>{\n    const [terrains] = useState([\n        0,0,0,0,    //Wood\n        1,1,1,1,    //Wool\n        2,2,2,2,    //Wheat\n        3,3,3,      //Clay\n        4,4,4,      //Stone\n        5           //Dessert\n    ]);\n\n    const [numbers] = useState([\n        2,3,3,4,4,5,5,6,6,8,8,9,9,10,10,11,11,12\n    ]);\n\n    const [board]     = useState(()=>{\n        let board = []\n        shuffle(terrains);\n        shuffle(numbers);\n        for(let i=0; i<19; i++){\n            const terrain = terrains.pop()\n            board.push({'terrain':terrain, 'position':i, 'number':terrain === 5 ? '':numbers.pop()})\n        }\n        return board\n    });\n\n    //Fisher-Yates Shuffle\n    function shuffle(list) {\n        let currentIndex = list.length, temporaryValue, randomIndex;\n\n        // While there remain elements to shuffle...\n        while (0 !== currentIndex) {\n\n            // Pick a remaining element...\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex -= 1;\n\n            // And swap it with the current element.\n            temporaryValue = list[currentIndex];\n            list[currentIndex] = list[randomIndex];\n            list[randomIndex] = temporaryValue;\n        }\n\n        return list;\n    }\n\n    /***\n     * componentDidMount\n     */\n    useEffect(()=>{\n        /***\n         * componentWillUnmount\n         */\n        return ()=>{\n\n        }\n    },[]);\n\n    return (\n        <div id={'board'}>\n            {board.map(terrain => <Terrain terrain={terrain.terrain} class={terrain.position} number ={terrain.number} key={terrain.position}/>)}\n        </div>\n    )\n}\n\nexport default Board;","import './App.css';\nimport Board from \"./components/Board/Board\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Board/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}